# =====================================================================
# Builder Stage
#
# This stage compiles the Go application.
# =====================================================================
FROM --platform=linux/arm64 golang:1.24-bookworm AS builder

# Set the working directory
WORKDIR /app

# Copy dependency manifests
COPY go.mod go.sum ./

# Download Go module dependencies
RUN go mod download

# Copy the rest of the application's source code
COPY . .

# Compile the application, disabling CGO.
# The binary will be statically linked, containing all dependencies.
RUN GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -v -o myapp .

# =====================================================================
# Runtime Stage
#
# This stage creates the final, lightweight image from scratch.
# Since CGO is disabled, the resulting binary is self-contained
# and does not need a base OS image with C libraries.
# =====================================================================
FROM scratch

# Set the working directory
WORKDIR /app

# Copy the compiled application from the builder stage
COPY --from=builder /app/myapp .

# Set the command to run when the container starts
ENTRYPOINT ["./myapp"]
